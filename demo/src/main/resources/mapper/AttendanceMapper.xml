<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.example.demo.mapper.AttendanceMapper">

	<select id="selectAttendanceByUserAndMonth" resultType="com.example.demo.model.Attendance">
		  SELECT *
		  	FROM attendance
		   WHERE userid = #{userid}
		     AND EXTRACT(YEAR FROM date) = #{year}
		     AND EXTRACT(MONTH FROM date) = #{month}
	</select>

    <insert id="insertAttendance" parameterType="com.example.demo.model.Attendance">
        INSERT INTO attendance (
            userid,
            date,
            type,
            start_time,
            end_time,
            leave_time
        ) VALUES (
            #{userid},
            #{date},
            #{type},
            #{start_Time},
            #{end_Time},
            #{leave_Time}
        )
        ON CONFLICT(userid, date)
        DO UPDATE SET
        	type = EXCLUDED.type,
        	start_time = EXCLUDED.start_time,
        	end_time = EXCLUDED.end_time,
        	leave_time = EXCLUDED.leave_time
    </insert>
    
    <select id="selectAllAttendanceTypes" resultType="com.example.demo.model.AttendanceType">
		  SELECT id
		  		,type
		  	FROM attendance_type
	</select>
	
	<select id="selectUserAttendanceInfo" resultType="com.example.demo.model.UserAttendanceInfo">
	<![CDATA[
		  select m.userid
		  	   , m.username 
		       , a.attendance_cnt
		       , a.attendance_alltime
		       , b.used_vacation
		       , (case when EXTRACT(YEAR FROM AGE(CURRENT_DATE, m.employment_date)) * 12 +
		                    EXTRACT(MONTH FROM AGE(CURRENT_DATE, m.employment_date)) < 6
		               then 0.0
		               else 10 + TRUNC((EXTRACT(YEAR FROM AGE(CURRENT_DATE, m.employment_date)) * 12 +
		                                EXTRACT(MONTH FROM AGE(CURRENT_DATE, m.employment_date)) - 6) / 12)
		           end) as vacation 
		       , absent
		       , (SELECT COUNT(DISTINCT day)
		            FROM generate_series(
		                    (date_trunc('month', TO_DATE(#{month}, 'YYYYMM'))), 
		                    (date_trunc('month', TO_DATE(#{month}, 'YYYYMM')) + INTERVAL '1 month' - INTERVAL '1 day'), 
		                    '1 day'::interval
		                 ) AS day
		            LEFT JOIN attendance t
		              ON t.userid = m.userid
		             AND t.date = day
		           WHERE EXTRACT(DOW FROM day) NOT IN (0, 6)
		             AND to_char(day, 'YYYYMM') = #{month}
		         ) AS workdays
		    from myusers m 
		    left join
		            (
		                select userid
		                     , count(*) as attendance_cnt
		                     , sum(end_time - start_time - leave_time) as attendance_alltime
		                  from attendance
		                 where 1=1
		                   and type != (select type from attendance_type where id = 3)
		                   and to_char(date, 'YYYYMM') = #{month}
		                 group by userid
		            ) a
		      on m.userid = a.userid
		    left join 
		            (
		                select userid
		                     , SUM(case when type = (select type from attendance_type where id = 5) then 0.5 
		                            ELSE 1 END) AS used_vacation
		                  from attendance
		                 where 1=1
		                   and type in (select type from attendance_type where id in (4, 5, 6) )
		                   and to_char(date, 'YYYYMM') = #{month}
		                 group by userid 
		            ) b
		      on m.userid = b.userid
		    left join
		            (
		                select userid
		                     , count(*) as absent
		                  from attendance
		                 where 1=1
		                   and type in (select type from attendance_type where id = 3)
		                   and to_char(date, 'YYYYMM') = #{month}
		                 group by userid 
		            ) c
		      on m.userid = c.userid
	]]>
	</select>
	
    
</mapper>